-- Criação das entidades fortes e fracas.
CREATE TABLE PACIENTE(
    CPF CHAR(11),
    NOME VARCHAR(70) NOT NULL,
    EMAIL VARCHAR(170) NOT NULL,
    SEXO CHAR(10), 
    DATA_NASCIMENTO DATE,
    END_CEP CHAR(8),
    END_ESTADO VARCHAR(30),
    END_CIDADE VARCHAR(50),
    END_BAIRRO VARCHAR(30),
    END_NUMERO VARCHAR(10),
    END_RUA VARCHAR(50),
    CONSTRAINT PACIENTE_PK PRIMARY KEY(CPF)
);

CREATE TABLE TELEFONES_PACIENTES(
    CPF CHAR(11),
    NUMERO CHAR(12) NOT NULL,
    CONSTRAINT TELEFONE_PACIENTE_PK PRIMARY KEY(CPF, NUMERO),
    CONSTRAINT CODIGO_PACIENTE_FK FOREIGN KEY (CPF) REFERENCES PACIENTE(CPF)
);

CREATE TABLE CONVENIO(
    CODIGO_ANS CHAR(10),
    CODIGO_OPERADORA CHAR(15) NOT NULL,
    CNPJ CHAR(14) NOT NULL,
    NOME VARCHAR(40) NOT NULL,
    ENDERECO VARCHAR(200) NOT NULL,
    EMAIL VARCHAR(170) NOT NULL,
    CONSTRAINT CONVENIO_PK PRIMARY KEY (CODIGO_ANS)
);

CREATE TABLE TELEFONES_CONVENIO(
    CODIGO_ANS CHAR(10),
    NUMERO CHAR(12),
    CONSTRAINT TELEFONE_CONVENIO_PK PRIMARY KEY(CODIGO_ANS, NUMERO),
    CONSTRAINT CODIGO_CONVENIO_FK FOREIGN KEY(CODIGO_ANS) REFERENCES CONVENIO(CODIGO_ANS)
);

CREATE TABLE MEDICO_REQUISITANTE(
    CODIGO INTEGER,
    CPF CHAR(11) NOT NULL,
    CNPJ CHAR(14) NOT NULL,
    CRM_NUMERO VARCHAR(16) NOT NULL,
    CRM_ESTADO VARCHAR(16) NOT NULL,
    NOME VARCHAR(70) NOT NULL,
    ESPECIALIDADE VARCHAR(50) NOT NULL,
    END_RUA VARCHAR(50),
    END_BAIRRO VARCHAR(30),
    END_CIDADE VARCHAR(50),
    END_ESTADO VARCHAR(30),
    END_CEP CHAR(8),
    CONSTRAINT MEDICO_REQUISITANTE_PK PRIMARY KEY(CODIGO)
);

CREATE TABLE TELEFONES_MEDICOS_REQUISITANTES(
    CODIGO_MEDICO_REQUISITANTE INTEGER,
    NUMERO CHAR(12) ,
    CONSTRAINT TELEFONES_MEDICOS_REQUISITANTES_PK PRIMARY KEY (CODIGO_MEDICO_REQUISITANTE, NUMERO),
    CONSTRAINT TELEFONES_MEDICOS_REQUISITANTES_FK FOREIGN KEY (CODIGO_MEDICO_REQUISITANTE) REFERENCES MEDICO_REQUISITANTE(CODIGO)
);

CREATE TABLE ATENDIMENTO( 
    CODIGO INTEGER,
    CPF_PACIENTE CHAR(11) NOT NULL, 
    CODIGO_ANS CHAR(10),
    CODIGO_MEDICO_REQUISITANTE INTEGER NOT NULL,
    DATA_ATENDIMENTO TIMESTAMP NOT NULL,
    CONSTRAINT ATENDIMENTO_PK PRIMARY KEY(CODIGO),
    CONSTRAINT CPF_PACIENTE_ATENDIMENTO_FK FOREIGN KEY(CPF_PACIENTE) REFERENCES PACIENTE(CPF),
    CONSTRAINT CODIGO_CONVENIO_ATENDIMENTO_CONVENIO_FK FOREIGN KEY(CODIGO_ANS) REFERENCES CONVENIO(CODIGO_ANS),
    CONSTRAINT MEDICO_REQUISITANTE_ATENDIMENTO_FK FOREIGN KEY (CODIGO_MEDICO_REQUISITANTE) REFERENCES MEDICO_REQUISITANTE(CODIGO)
);

CREATE TABLE MEDICO_ELABORADOR(
    CODIGO INTEGER,
    CPF CHAR(11) NOT NULL,
    CNPJ CHAR(14) NOT NULL,
    CRM_NUMERO VARCHAR(16) NOT NULL,
    CRM_ESTADO VARCHAR(16) NOT NULL,
    NOME VARCHAR(70) NOT NULL,
    ESPECIALIDADE VARCHAR(50) NOT NULL,
    ENDERECO VARCHAR(150),
    TELEFONE CHAR(12) NOT NULL,
    SALARIO NUMERIC(12,2) NOT NULL,
    CARGA_HORARIA SMALLINT NOT NULL,
    DATA_ADMISSAO DATE,
    DATA_DEMISSAO DATE,
    CONSTRAINT MEDICO_ELABORADOR_PK PRIMARY KEY(CODIGO)
);

CREATE TABLE DEPENDENTE( 
    CODIGO_DEPENDENTE INTEGER,
    CODIGO_MEDICO_ELABORADOR INTEGER,
    NOME VARCHAR(70) NOT NULL,
    IDADE SMALLINT,
    SEXO VARCHAR(10),
    CONSTRAINT DEPENDENTE_PK PRIMARY KEY (CODIGO_DEPENDENTE, CODIGO_MEDICO_ELABORADOR),
    CONSTRAINT DEPENDENTE_FK FOREIGN KEY(CODIGO_MEDICO_ELABORADOR) REFERENCES MEDICO_ELABORADOR(CODIGO)
);

CREATE TABLE EXAME(
    CODIGO INTEGER,
    NOME_EXAME VARCHAR(40) NOT NULL,
    MATERIAL_COLHEITA VARCHAR(50) NOT NULL,
    CLASSE_EXAME VARCHAR(30) NOT NULL,
    SUBSTANCIAS_USADAS VARCHAR(250),
    METODO VARCHAR(50),
    PRAZO_EXAME INTEGER, --prazo em dias ou horas... poder ser inclusive INTERVAL
    VALORES_REFERENCIA VARCHAR(200) NOT NULL,
    NOTA NUMERIC(2,1) DEFAULT 0,
    UNIDADE VARCHAR(10),
    CODIGO_MEDICO_ELABORADOR INTEGER NOT NULL,
    CONSTRAINT EXAME_PK PRIMARY KEY(CODIGO),
    CONSTRAINT MEDICO_ELABORADOR_EXAME_REALIZADO_FK FOREIGN KEY(CODIGO_MEDICO_ELABORADOR) REFERENCES MEDICO_ELABORADOR(CODIGO)
);


CREATE TABLE FORMAS_PAGAMENTO(
    ID INTEGER,
    FORMA VARCHAR(30) NOT NULL,
    CONSTRAINT FORMAS_PAGAMENTO_PK PRIMARY KEY(ID)
);

-- Criação das entidades derivadas de relacionamentos
CREATE TABLE PACIENTE_CONVENIO(
    CPF_PACIENTE CHAR(11),
    CODIGO_ANS CHAR(10),
    NUMERO INTEGER,
    DATA_EXPIRACAO DATE,
    CONSTRAINT PLANO_CONVENIO_PK PRIMARY KEY(CPF_PACIENTE, CODIGO_ANS),
    CONSTRAINT CPF_PACIENTE_PLANO_FK FOREIGN KEY(CPF_PACIENTE) REFERENCES PACIENTE(CPF),
    CONSTRAINT CODIGO_CONVENIO_PLANO_FK FOREIGN KEY(CODIGO_ANS) REFERENCES CONVENIO(CODIGO_ANS)
);

CREATE TABLE EXAME_PROVIDO(
    CODIGO_ANS CHAR(10),
    CODIGO_EXAME INTEGER,
    PRECO NUMERIC(6,2) NOT NULL,
    CONSTRAINT EXAME_PROVIDO_PK PRIMARY KEY(CODIGO_ANS, CODIGO_EXAME),
    CONSTRAINT CODIGO_ANS_EXAME_PROVIDO_FK FOREIGN KEY(CODIGO_ANS) REFERENCES CONVENIO(CODIGO_ANS),
    CONSTRAINT CODIGO_EXAME_EXAME_PROVIDO_FK FOREIGN KEY(CODIGO_EXAME) REFERENCES EXAME(CODIGO)
);

CREATE TABLE EXAME_REQUERIDO_ATENDIMENTO(
    CODIGO_ATENDIMENTO INTEGER,
    CODIGO_EXAME INTEGER,
    RESULTADO VARCHAR(200),
    TIMESTAMP_COLETA TIMESTAMP,
    TIMESTAMP_LIBERACAO TIMESTAMP,
    PRECO NUMERIC(6,2),
    CONSTRAINT EXAME_REQUERIDO_ATENDIMENTO_PK PRIMARY KEY (CODIGO_ATENDIMENTO, CODIGO_EXAME),
    CONSTRAINT ATENDIMENTO_EXAME_REQUERIDO_ATENDIMENTO_FK FOREIGN KEY(CODIGO_ATENDIMENTO) REFERENCES ATENDIMENTO(CODIGO),
    CONSTRAINT EXAME_EXAME_REQUERIDO_ATENDIMENTO_FK FOREIGN KEY(CODIGO_EXAME) REFERENCES EXAME(CODIGO)
);

CREATE TABLE CONVENIO_MEDICO_REQUISITANTE(
    CODIGO_ANS CHAR(10),
    CODIGO_MEDICO_REQUISITANTE INTEGER,
    CONSTRAINT ATENDIMENTO_MEDICO_REQUISITANTE_PK PRIMARY KEY(CODIGO_ANS, CODIGO_MEDICO_REQUISITANTE),
    CONSTRAINT CONVENIO_ATENDIMENTO_MEDICO_REQUISITANTE_FK FOREIGN KEY(CODIGO_ANS) REFERENCES CONVENIO(CODIGO_ANS),
    CONSTRAINT MEDICO_REQUISITANTE_ATENDIMENTO_MEDICO_REQUISITANTE_FK FOREIGN KEY(CODIGO_MEDICO_REQUISITANTE) REFERENCES MEDICO_REQUISITANTE(CODIGO)
);

CREATE TABLE REQUISICAO_EXAME(
    CODIGO_MEDICO_REQUISITANTE INTEGER,
    CODIGO_EXAME INTEGER,
    CONSTRAINT REQUISICAO_EXAME_PK PRIMARY KEY(CODIGO_MEDICO_REQUISITANTE, CODIGO_EXAME),
    CONSTRAINT MEDICO_REQUISITANTE_REQUISICAO_EXAME_FK FOREIGN KEY(CODIGO_MEDICO_REQUISITANTE) REFERENCES MEDICO_REQUISITANTE(CODIGO),
    CONSTRAINT EXAME_REQUISICAO_EXAME_FK FOREIGN KEY(CODIGO_EXAME) REFERENCES EXAME(CODIGO)
);

CREATE TABLE FORMAS_PAGAMENTO_ATENDIMENTO(
    CODIGO_ATENDIMENTO INTEGER NOT NULL,
    CODIGO_FORMA_PAGAMENTO INTEGER NOT NULL,
    VALOR_PAGAMENTO NUMERIC(8,2) not null,
    CONSTRAINT FORMAS_PAGAMENTO_ATENDIMENTO_PK PRIMARY KEY(CODIGO_ATENDIMENTO, CODIGO_FORMA_PAGAMENTO),
    CONSTRAINT FORMAS_PAGAMENTO_ATENDIMENTO_FK FOREIGN KEY(CODIGO_ATENDIMENTO) REFERENCES ATENDIMENTO(CODIGO),
    CONSTRAINT FORMAS_PAGAMENTO_FK FOREIGN KEY(CODIGO_FORMA_PAGAMENTO) REFERENCES FORMAS_PAGAMENTO(ID)
);

-- Criando as sequences
CREATE SEQUENCE PACIENTE_SEQ MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 NOCYCLE;
CREATE SEQUENCE CONVENIO_SEQ MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 NOCYCLE;
CREATE SEQUENCE ATENDIMENTO_SEQ MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 NOCYCLE;
CREATE SEQUENCE MEDICO_REQUISITANTE_SEQ MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 NOCYCLE;
CREATE SEQUENCE MEDICO_ELABORADOR_SEQ MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 NOCYCLE;
CREATE SEQUENCE EXAME_SEQ MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 NOCYCLE;